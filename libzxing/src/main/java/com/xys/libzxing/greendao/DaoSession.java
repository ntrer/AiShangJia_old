package com.xys.libzxing.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.xys.libzxing.zxing.Bean.ActionCustomersBean;
import com.xys.libzxing.zxing.Bean.CustomersBean;
import com.xys.libzxing.zxing.Bean.ActivityBean;

import com.xys.libzxing.greendao.ActionCustomersBeanDao;
import com.xys.libzxing.greendao.CustomersBeanDao;
import com.xys.libzxing.greendao.ActivityBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig actionCustomersBeanDaoConfig;
    private final DaoConfig customersBeanDaoConfig;
    private final DaoConfig activityBeanDaoConfig;

    private final ActionCustomersBeanDao actionCustomersBeanDao;
    private final CustomersBeanDao customersBeanDao;
    private final ActivityBeanDao activityBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        actionCustomersBeanDaoConfig = daoConfigMap.get(ActionCustomersBeanDao.class).clone();
        actionCustomersBeanDaoConfig.initIdentityScope(type);

        customersBeanDaoConfig = daoConfigMap.get(CustomersBeanDao.class).clone();
        customersBeanDaoConfig.initIdentityScope(type);

        activityBeanDaoConfig = daoConfigMap.get(ActivityBeanDao.class).clone();
        activityBeanDaoConfig.initIdentityScope(type);

        actionCustomersBeanDao = new ActionCustomersBeanDao(actionCustomersBeanDaoConfig, this);
        customersBeanDao = new CustomersBeanDao(customersBeanDaoConfig, this);
        activityBeanDao = new ActivityBeanDao(activityBeanDaoConfig, this);

        registerDao(ActionCustomersBean.class, actionCustomersBeanDao);
        registerDao(CustomersBean.class, customersBeanDao);
        registerDao(ActivityBean.class, activityBeanDao);
    }
    
    public void clear() {
        actionCustomersBeanDaoConfig.clearIdentityScope();
        customersBeanDaoConfig.clearIdentityScope();
        activityBeanDaoConfig.clearIdentityScope();
    }

    public ActionCustomersBeanDao getActionCustomersBeanDao() {
        return actionCustomersBeanDao;
    }

    public CustomersBeanDao getCustomersBeanDao() {
        return customersBeanDao;
    }

    public ActivityBeanDao getActivityBeanDao() {
        return activityBeanDao;
    }

}
